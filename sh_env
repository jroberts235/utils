#!/usr/bin/env ruby
require 'colorize'

# accept nil for environment and show all env's
if ARGV[0] == nil
  arg1 = nil
else
  arg1 = ARGV[0].dup
end

arg2 = ARGV[1] || (Dir.pwd).split('/').last

raise "Knife can't be found at '/usr/bin/knife'" unless File.exist?('/usr/bin/knife')

environment   = arg1
cookbook      = arg2 

user_name     = `whoami`.chomp
knife_path    = `which knife`.chomp
knife_cfg     = "/Users/#{user_name}/.chef/knife.rb"
repo_dir      = "/Users/#{user_name}/chef-repo"
cookbook_dir  = "#{repo_dir}/cookbooks/#{cookbook}"

puts 
file = File.open("#{cookbook_dir}/metadata.rb", 'r').each { |line| puts "Local #{line}".cyan if line.include?('version') }
file.close

if environment == nil or environment == 'all'
    a = ['prod','dr','ops','stg','qa1','qa2','qa3','int1','int2','int3']
    a.each do |env|
    environment = env
    cmd = "#{knife_path} environment show #{environment} -c #{knife_cfg} | grep #{cookbook}"
        Dir.chdir(repo_dir){
            raw_output = %x(#{cmd})
            output_a = raw_output.split(' ')
            printf("%5s %s %s %s\n", "#{env.green}:", output_a[0], output_a[1], output_a[2])
        }
    end
else
    cmd = "#{knife_path} environment show #{environment} -c #{knife_cfg} | grep #{cookbook}"
    Dir.chdir(repo_dir){
        raw_output = %x(#{cmd})
        output_a = raw_output.split(' ')
        printf("%5s %s %s %s\n", "#{environment.green}:", output_a[0], output_a[1], output_a[2])
    }
end

puts "There was a problem executing your command!".red if $?.exitstatus > 0
